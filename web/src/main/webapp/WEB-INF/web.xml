<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
          version="2.4">
  	<display-name>ems</display-name>
  	<description>ems web application</description>
    
  	<!-- 文档按如下顺序布局可以保证在weblogic8下启动时不会报web.xml不规范的错误：
  		display-name -> description -> context-param -> filter ->filter-mapping -> 
  		listener -> servlet ->servlet-mapping -> session-config -> welcome-file-list ->
  		error-page -> taglib
  	 -->
  	 
  	<!-- 设置app的根路径到system property -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>oz.webapp.root</param-value>
	</context-param>
	
	<!-- log4j 的 加载路径 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/log4j.properties</param-value>
	</context-param>
	
	<!-- log4j 中是否WebAppRootKey的变量,weblogic中设置为flase,并且在log4j.properties不使用变量值 -->
	<context-param>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>false</param-value>
	</context-param>
	
	<!-- Spring Application Context -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/ems/ApplicationContext.xml
		</param-value>
	</context-param>
	
	<!--  OZ Application Loader-->
	<context-param>
		<description>系统加载器</description>
		<param-name>loaders</param-name>
		<param-value>
			cn.oz.web.ui.conf.UIConfigLoader,cn.oz.system.admin.service.OzVersionVerifier,cn.oz.config.service.SchedulingJobLoader,cn.oz.zop.server.startup.ZopStartup
		</param-value>
	</context-param>

	<!-- filter -->
	<!-- utf-8编码过虑器 -->
	<filter>
		<filter-name>SetCharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	
	<!-- Hibernate Open Session In View filter  -->
	<filter>
		<filter-name>osivFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	
		
	
	<!-- 系统filter -->
	<filter>
		<filter-name>requestContextFilter</filter-name>
		<filter-class>cn.oz.web.filter.RequestContextFilter</filter-class>
	</filter>
	
	<!-- 禁用缓存过滤器:*.do -->
	<filter>
		<filter-name>noCacheFilter</filter-name>
		<filter-class>cn.oz.web.filter.CacheFilter</filter-class>
		<init-param>
			<param-name>expires</param-name>
			<!--配为0代表禁用缓存-->
			<param-value>0</param-value>
		</init-param>
	</filter>
	
	<!-- 缓存过滤器:js、css、图片等文件添加永久缓存(设为10年) -->
	<filter>
		<filter-name>foreverCacheFilter</filter-name>
		<filter-class>cn.oz.web.filter.CacheFilter</filter-class>
		<init-param>
			<param-name>expires</param-name>
			<!--缓存时间配置 ,单位为分钟,配为-1代表永久的缓存-->
			<param-value>-1</param-value>
		</init-param>
		<init-param>
			<param-name>exclusion</param-name>
			<param-value>/oz/apps/module/attachment/*</param-value>
		</init-param>
	</filter>
    
    <!-- 上下文绑定过滤器 -->
    <filter>
        <filter-name>userContextFilter</filter-name>
        <filter-class>cn.oz.web.filter.UserContextFilter</filter-class>
     </filter>
     
	<!-- 系统自动登录 -->
    <filter>
        <filter-name>autoLoginVerifyFilter</filter-name>
        <filter-class>cn.oz.web.filter.AutoLoginVerifyFilter</filter-class>
    </filter>
        
    <filter>
        <filter-name>ssoAuthorizationFilter</filter-name>
        <filter-class>cn.oz.web.filter.SSOAuthorizationFilter</filter-class>
     </filter>
    
	<!-- 打开首页过滤器  -->
	<filter>
		<filter-name>mainPageFilter</filter-name>
		<filter-class>cn.oz.web.filter.MainPageFilter</filter-class>
		<init-param>
			<param-name>mainPageUrl</param-name>
			<param-value>
				/mainPageAction.do
			</param-value> 
		</init-param>
	</filter>
    
	<!-- 系统安全过滤器  -->
	<filter>
		<filter-name>securityVerifyFilter</filter-name>
		<filter-class>cn.oz.web.filter.SecurityVerifyFilter</filter-class>
		<init-param>
			<param-name>loginUrl</param-name>
			<param-value>
				/loginAction.do?action=loginPage
			</param-value> 
		</init-param>
		<init-param>
			<param-name>exclusion</param-name>
			<param-value>
				/
               	/oauth/*
				/api/*
				/loginAction.do
				/logoutAction.do
				/login/*
				/zop
				/**/dlg_selectSingle.jsp
				/form/defAttachmentAction.do
				/index/*
				/index/subindex/*
				/indexAction.do
                /web/*
                /editor/ueditorAction.do
			</param-value> 
		</init-param>
	</filter>
	
	
	<!-- 对响应进行gzip压缩的过虑器  -->
	<filter>
		<filter-name>gzip-filter</filter-name>
		<filter-class>cn.oz.web.filter.gzip.GzipFilter</filter-class>
		<!-- 排除某些目录或文件不处理(多个配置间用逗号分隔): 如对于下载文件的url则需要在这里配置排除  -->
	 	<init-param>
			<param-name>exclusion</param-name>
			<param-value>/attachmentAction*</param-value>
		</init-param>
		<!-- 是否启用js、css文件的静态gzip支持 -->
		<init-param>
		   	<param-name>enableStaticGzip</param-name>
		   	<param-value>false</param-value>
	  </init-param>
	</filter>
	
	<!-- 禁用缓存过滤器:*.do、noCacheFilter -->
	<filter-mapping>
		<filter-name>noCacheFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>noCacheFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<!-- 缓存过滤器:js、css、图片等文件添加永久缓存(设为10年) -->
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.cssgz</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.js</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.jsgz</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.gif</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.jpg</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.png</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>foreverCacheFilter</filter-name>
		<url-pattern>*.tif</url-pattern>
	</filter-mapping>
			
     <!-- filter-mapping，请注意SetCharacterEncodingFilter一定要放在第一位，否则Tomcat等不启作用 -->    
    <filter-mapping>
        <filter-name>SetCharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- open session in view -->
    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
        
    <!-- 请求上下文过滤器 -->
    <filter-mapping>
        <filter-name>requestContextFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>requestContextFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>    
  
     <!-- 用户上下文过滤器 -->
    <filter-mapping>
        <filter-name>userContextFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
	<filter-mapping>
		<filter-name>requestContextFilter</filter-name>
		<url-pattern>/zop</url-pattern>
	</filter-mapping>
	<filter-mapping>
        <filter-name>userContextFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>userContextFilter</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>
    
    <!-- 自动登陆过滤器 -->
    <filter-mapping>
        <filter-name>autoLoginVerifyFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>autoLoginVerifyFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <!-- SSO登陆过滤器 -->
    <filter-mapping>
       <filter-name>ssoAuthorizationFilter</filter-name>
       <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
       <filter-name>ssoAuthorizationFilter</filter-name>
       <url-pattern>*.do</url-pattern>
    </filter-mapping>
	<!-- 首页打开过滤器 -->
	<filter-mapping>
		<filter-name>mainPageFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>			
	<!-- 系统安全过滤器 -->
	<filter-mapping>
		<filter-name>securityVerifyFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityVerifyFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	
	
	<!-- 对响应进行gzip压缩的过虑器：js文件、css文件、*.do返回的html和jsp页面  -->
	<filter-mapping>
		<filter-name>gzip-filter</filter-name>
		<url-pattern>*.js</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>gzip-filter</filter-name>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>gzip-filter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>
			 	
	<!--Spring log4j Config loader  -->
 	<listener>
  		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
 	</listener>
 		 	
	<!--Spring ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	 	
 	<!-- OZ第一个Listener，初始化WebAppContext/AppContext -->
 	<listener>
 		<listener-class>cn.oz.web.listener.WebAppContextLoaderListener</listener-class>
 	</listener>
 	
 	<!-- 初始化Application manifest仓库 -->
 	<listener>
 		<listener-class>cn.oz.apps.web.ManifestLoaderListener</listener-class>
 	</listener>
 	
 	<!-- 其它需要在系统启动时执行的动作 -->
 	<listener>
 		<listener-class>cn.oz.web.listener.AppStartupLoaderListener</listener-class>
 	</listener>

	<!--weblogic precompile config for servlet-->
		
	<!-- Struts Action Servlet Configuration  -->
	<servlet>
		<servlet-name>OzActionServlet</servlet-name>
		<servlet-class>cn.oz.web.servlet.OzActionServlet</servlet-class>
		<init-param>
			<param-name>configBean</param-name>
			<param-value>strutsConfig</param-value> 
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
    
    <!-- Struts -->
	<servlet-mapping>
		<servlet-name>OzActionServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<!-- ZOP   -->
	<servlet>
		<servlet-name>routerServlet</servlet-name>
		<servlet-class>cn.oz.zop.server.ZopServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>routerServlet</servlet-name>
		<url-pattern>/zop</url-pattern>
	</servlet-mapping>
   
	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	
	<!-- mime mapping -->
    <!-- currently the W3C havent settled on a media type for WSDL;
    http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
    for now we go with the basic 'it's XML' response -->
	<mime-mapping>
        <extension>wsdl</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
    
    <!-- welcome files -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>/index/index.jsp</welcome-file>
	</welcome-file-list>
	
 	 <!-- error pages -->
	<error-page>
		<error-code>500</error-code>
		<location>/oz/common/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/oz/common/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/oz/common/403.jsp</location>
	</error-page>
	
	<!-- tag libraries -->
	<jsp-config>
		
	</jsp-config>
	 
   <distributable/>
    
</web-app>